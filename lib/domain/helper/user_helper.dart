import 'dart:convert';
import 'dart:developer';

import 'package:dio/dio.dart';

import 'package:github_repo/domain/models/user_details.dart';
import 'package:http/http.dart' as http;
class UserHelper{
  UserHelper._();
  static UserHelper userhelper=UserHelper._();
    
  Future <Autogenerated> searchUsers(String value)async{
     
  http.Response response= await http.get(Uri.parse("https://api.github.com/search/repositories?q=$value"));
  
  
   Autogenerated auto=Autogenerated.fromJson(jsonDecode(response.body));
  return auto;
  // if (response.statusCode == 200) {
  //   // If the server did return a 200 OK response,
  //   // then parse the JSON.
  //   log("The helper");
  //   return auto;
  // } 
  // else {
  //   // If the server did not return a 200 OK response,
  //   // then throw an exception.
  //   throw Exception('Problem here in helper');
  // }

  

  }
//   Future<ChatData> searchRepositories() async {
//   final response = await dio.get('https://api.github.com/search/repositories?q=Q');

//   if (response.statusCode == 200) {
//     final data = jsonDecode(response.data)['items'];
//     ChatData chat = ChatData.fromJason(data);
//     return chat;
//     // return data.map<Map<String, dynamic>>((item) => {
//     //   'owner': item['owner']['login'],
//     //   'description': item['description'],
//     //   'html_url': item['html_url'],
//     //   'full_name': item['full_name']
//     // }).toList();
//   } else {
//     throw Exception('Failed to load repositories');
//   }
// }
Future<List<Map<String, dynamic>>> fetchUsers() async {
  final response = await http.get(Uri.parse('https://api.github.com/repositories'));

  if (response.statusCode == 200) {
    final List<dynamic> data = json.decode(response.body);
    final List<Map<String, dynamic>> repositories = [];

    for (final item in data) {
      repositories.add(item as Map<String, dynamic>);
      
    }

    return repositories;
  } else {
    throw Exception('Failed to get repositories');
  }
}
Future<Autogenerated> getUsers() async {
  final response = await http.get(Uri.parse('https://api.github.com/repositories'));

  if (response.statusCode == 200) {
    final jsonData = json.decode(response.body) as List<dynamic>;
    final List<Items> items = jsonData.map((e) =>Items.fromJson(e) ,).toList();

     
    return Autogenerated(items: items);
  } else {
    throw Exception('Failed to get repositories');
  }
}

}